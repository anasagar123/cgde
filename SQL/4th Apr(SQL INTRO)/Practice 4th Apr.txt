			 SQL(Structure Query Language):-
                -------------------------------------------------
## SQL :-
------------
-> SQL is the standard language for Relation Database System.All relational databse management systems like MySQL,Ms Access,Oracle,SQL Server.
-> Allow users to access data in relational database management systems.
-> Allow users to describe the data.
-> Allow users to create and drop databases and tables.


## SQL Structure :
---------------------
-> One RDBMS can have multiple number of database.
-> with in a databse we have a collection of rows and table which is refer to as a  table.
-> One database can have multiple tables.

## SQL Process :-
----------------------
-> SQL Query -> Query Langauage Processor -> DBMS Engine -> Database

## DATA :
------------
-> Data refers to systematic record of a specific quantity.

## Database :-
------------------
-> which will contain the data

## RDBMS :-
---------------
-> which is a platform to mantain and manipulate the data

## SQL :-
------------
-> which is a langauge,we used to interact with database.

## SQL ENVIRONMENT :-
--------------------------
-> Where we are writing the sql query.like Editor,Result,Message,Object Explorer.

## Categories of SQL Statements
----------------------------------
DDL(data Definition Language)   ----------> CREATE,ALTER,DROP
DML(Data Manipulation Language) ----------> INSERT,UPDATE,DELETE
DQL(Data Query Language)        ----------> SELECT
DCL(Data Control Language)      ----------> GRANT,REVOKE


####### CREATE TABLE Statement ##########
--------------------------------------------
CREATE TABLE table_EID(
column1 datatype (Size),
column2 datatype (Size),
column3 datatype,

.....
columnN datatype);



########## CREATE TABLE Statement ##########
---------------------------------------------------
CREATE TABLE EMP (
RNO char (5),
EID CHAR (20),
AGE INT ,
CLASS CHAR(10),
);


############# INSERT Statement ###########
-----------------------------------------------
• INSERT INTO table_EID ( column1, column2....columnN) VALUES (
value1, value2....valueN);

• INSERT INTO TABLE_EID VALUES (value1,value2,value3,...valueN);


############ SQL SELECT Statement #############
----------------------------------------------------
• SELECT column1, column2....columnN FROM table_EID

• SELECT * FROM table_EID;

---------------------------------------------------------------------------------------------------------

    ## SQL WHERE CLAUSES ##
    ------------------------
SELECT column1, column2....columnN FROM table_EID WHERE
CONDITION;


   ## SQL LIKECLAUSE ##
  -----------------------
SELECT column1, column2....columnN FROM
table_EID WHERE column LIKE 'XXXX%'
SELECT FROM table_EID WHERE column LIKE 'XXXX_'

	There are two wildcards used in conjunction with the LIKE operator:
	1. The percent sign (%)
	2. The underscore (_)

 EXAMPLE :

SELECT * FROM EMP
WHERE NAME LIKE 'J%'; -- START WITH J 

SELECT * FROM EMP
WHERE CITY LIKE '%W'; -- END WITH W

SELECT * FROM EMP
WHERE NAME LIKE '_____'; -- NAME HAS EXACTLY 5 CHARACTER

SELECT * FROM EMP
WHERE NAME LIKE '__h%'; -- THIRD CHAR IS h AND FURTHER IT COULD BE ANYTHING


		
		 ## TOP CLAUSE ##
  	     -----------------------
--> IF WE WANT ONLY TOP 10 RECORDS THEN WILL USE.

SELECT TOP number|percent column_EID(s) FROM
table_EID WHERE [condition]

EXAMPLE :

SELECT TOP 2 NAME FROM EMP; -- TOP TWO FIRST NAME
WHERE TOP 3 SALARY FROM EMP;


	
		 ## UPDATE CLAUSE ##
  	     --------------------------
--> FOR CHANGING PURPOSE

UPDATE table_EID
SET column1 = value1, column2 = value2 ....columnN=valueN
[ WHERE CONDITION ];

EXAMPLE :

UPDATE EMP SET  NAME='SOHAN' WHERE CITY='MOSCOW'; -- CHANGE THE NAME WHERE CITY MOSCOW IS THERE
UPDATE EMP SET SALARY = 7000; -- IT WILL IMPACT ALL THE RECORDS


		## DELETE CLAUSE ##
             --------------------------
-> IT WILL NEVER DELETE THE TABLE.
-> ONCE DELETED, VALUE WILL NOT COME AGAIN

• DELETE FROM table_EID WHERE {CONDITION};
• DELETE FROM table_EID
• DELETE table_EID

EXAMPLE :

DELETE FROM EMP WHERE CITY='MOSCOW';  -- DELETE THE ROW WHERE CITY IS MOSCOW

DELETE FROM EMP; -- DELETE ALL THE RECORDS FROM THE EMP TABLE, BUT TABLE WILL BE THERE

DELETE EMP;      --  DELETE ALL THE RECORDS FROM THE EMP TABLE, BUT TABLE WILL BE THERE

DELETE FROM EMP WHERE CITY='MOSCOW'; -- DELETE MOSCOW FROM THE CITY COLUMN 



			## ALTER ##
                 -------------------------
-> THROUGH ALTER WE CAN ADD COLUMN OR REMOVE COLUMN OR MADE SOMETHING(DATA TYPE,SIZE) FROM EXISTING TABLE.

• ALTER TABLE table_EID
ADD
column_EID {data_type};

• ALTER TABLE table_EID
DROP Column
column_EID ;

• ALTER TABLE table_EID
ALTER Column
column_EID {data_type}; 

EXAMPLE :

ALTER TABLE EMP
ADD COMPANY VARCHAR(10); -- HERE WE ARE ADDING COMPANY COLUMN IN EMP TABLE


UPDATE EMP SET COMPANY = 'CG'; -- ADD VALUE IN COPANY COLUMN

ALTER TABLE EMP
DROP COLUMN COMPANY; -- REMOVE THE COMPANY COLUMN WHICH HAVE ADDED

ALTER TABLE EMP
ALTER COLUMN NAME VARCHAR(20) -- CHANGING THE NAME OF DATA TYPE AND SIZE

INSERT INTO EMP
VALUES('PRAVEEN',11,83536373,'AS@GMAIL.COM',12000,'RANCHI');
  


		## DROP ##
          ---------------------------
-> THROUGH DROP WE CAN DELETE OR REMOVE DATABASE,TABLE,INDEX,COLUMN ETC.

• DROP TABLE table_EID;  -- DELTE TABLE
• DROP DATABASE database_EID; -- DELTE DATABASE
• ALTER TABLE EMP DROP COLUMN COMPANY; -- REMOVE COLUMN NAME

EXAMPLE :

DROP TABLE EMP;

DROP DATABASE LEARN36;

ALTER TABLE EMP DROP COLUMN COMPANY;



		## TRUNCATE COMMAND ##
          --------------------------------
--> REMOVE ALL THE DATA FROM THR TABLE
--> TRUNCATE DOES NOT ACCEPT WHERE CLAUSE

• TRUNCATE TABLE table_EID;

EXAMPLE :

TRUNCATE TABLE EMP;


		## COMMIT ##
        -------------------------------
--> COMMIT MEANS TO SAVE


		## ROLLBACK ##
           ---------------------------
-> ROLLBACK MEANS UNDO.



		## SQL OPERATOR ##
           ------------------------------
• An operator is a reserved word or a character used primarily in an SQL
statement's WHERE clause to perform operation(s), such as
comparisons and arithmetic operations.

• Operators are used to specify conditions in an SQL statement


                  Type of Operators

• Arithmetic Operators (+, -, /, *, %)
• Comparison Operators (=, <>, !=, >, <, >= ,<=, !>, !<)
• Logical Operators (AND, OR, NOT)
• Other Operators (BETWEEN , IN, LIKE, IS NULL, DISTINCT, EXISTS 


 EXAMPLE :

SELECT * FROM EMP
WHERE DEPT ='OPS' AND DESI='MANAGER'

SELECT * FROM EMP
WHERE NOT DEPT='TEMP'























